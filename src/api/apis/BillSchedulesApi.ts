/* tslint:disable */
/* eslint-disable */
/**
 * Chabloom Payments
 * Chabloom Payments v1 API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BillScheduleViewModel,
    BillScheduleViewModelFromJSON,
    BillScheduleViewModelToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface ApiBillSchedulesIdGetRequest {
    id: string;
}

export interface ApiBillSchedulesIdPutRequest {
    id: string;
    billScheduleViewModel?: BillScheduleViewModel;
}

export interface ApiBillSchedulesPostRequest {
    billScheduleViewModel?: BillScheduleViewModel;
}

/**
 * 
 */
export class BillSchedulesApi extends runtime.BaseAPI {

    /**
     */
    async apiBillSchedulesGetRaw(): Promise<runtime.ApiResponse<Array<BillScheduleViewModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BillSchedules`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BillScheduleViewModelFromJSON));
    }

    /**
     */
    async apiBillSchedulesGet(): Promise<Array<BillScheduleViewModel>> {
        const response = await this.apiBillSchedulesGetRaw();
        return await response.value();
    }

    /**
     */
    async apiBillSchedulesIdGetRaw(requestParameters: ApiBillSchedulesIdGetRequest): Promise<runtime.ApiResponse<BillScheduleViewModel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiBillSchedulesIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BillSchedules/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BillScheduleViewModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBillSchedulesIdGet(requestParameters: ApiBillSchedulesIdGetRequest): Promise<BillScheduleViewModel> {
        const response = await this.apiBillSchedulesIdGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiBillSchedulesIdPutRaw(requestParameters: ApiBillSchedulesIdPutRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiBillSchedulesIdPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/BillSchedules/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: BillScheduleViewModelToJSON(requestParameters.billScheduleViewModel),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiBillSchedulesIdPut(requestParameters: ApiBillSchedulesIdPutRequest): Promise<void> {
        await this.apiBillSchedulesIdPutRaw(requestParameters);
    }

    /**
     */
    async apiBillSchedulesPostRaw(requestParameters: ApiBillSchedulesPostRequest): Promise<runtime.ApiResponse<BillScheduleViewModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/BillSchedules`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BillScheduleViewModelToJSON(requestParameters.billScheduleViewModel),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BillScheduleViewModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBillSchedulesPost(requestParameters: ApiBillSchedulesPostRequest): Promise<BillScheduleViewModel> {
        const response = await this.apiBillSchedulesPostRaw(requestParameters);
        return await response.value();
    }

}
