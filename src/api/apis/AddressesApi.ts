// tslint:disable
/**
 * Chabloom Payments
 * Chabloom Payments v1 API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    AddressViewModel,
} from '../models';

export interface ApiAddressesIdDeleteRequest {
    id: string;
}

export interface ApiAddressesIdGetRequest {
    id: string;
}

export interface ApiAddressesIdPutRequest {
    id: string;
    addressViewModel?: AddressViewModel;
}

export interface ApiAddressesPostRequest {
    addressViewModel?: AddressViewModel;
}

/**
 * no description
 */
export class AddressesApi extends BaseAPI {

    /**
     */
    apiAddressesGet(): Observable<Array<AddressViewModel>>
    apiAddressesGet(opts?: OperationOpts): Observable<RawAjaxResponse<Array<AddressViewModel>>>
    apiAddressesGet(opts?: OperationOpts): Observable<Array<AddressViewModel> | RawAjaxResponse<Array<AddressViewModel>>> {
        return this.request<Array<AddressViewModel>>({
            url: '/api/Addresses',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiAddressesIdDelete({ id }: ApiAddressesIdDeleteRequest): Observable<AddressViewModel>
    apiAddressesIdDelete({ id }: ApiAddressesIdDeleteRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AddressViewModel>>
    apiAddressesIdDelete({ id }: ApiAddressesIdDeleteRequest, opts?: OperationOpts): Observable<AddressViewModel | RawAjaxResponse<AddressViewModel>> {
        throwIfNullOrUndefined(id, 'id', 'apiAddressesIdDelete');

        return this.request<AddressViewModel>({
            url: '/api/Addresses/{id}'.replace('{id}', encodeURI(id)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     */
    apiAddressesIdGet({ id }: ApiAddressesIdGetRequest): Observable<AddressViewModel>
    apiAddressesIdGet({ id }: ApiAddressesIdGetRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AddressViewModel>>
    apiAddressesIdGet({ id }: ApiAddressesIdGetRequest, opts?: OperationOpts): Observable<AddressViewModel | RawAjaxResponse<AddressViewModel>> {
        throwIfNullOrUndefined(id, 'id', 'apiAddressesIdGet');

        return this.request<AddressViewModel>({
            url: '/api/Addresses/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiAddressesIdPut({ id, addressViewModel }: ApiAddressesIdPutRequest): Observable<void>
    apiAddressesIdPut({ id, addressViewModel }: ApiAddressesIdPutRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    apiAddressesIdPut({ id, addressViewModel }: ApiAddressesIdPutRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'apiAddressesIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/api/Addresses/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: addressViewModel,
        }, opts?.responseOpts);
    };

    /**
     */
    apiAddressesPost({ addressViewModel }: ApiAddressesPostRequest): Observable<AddressViewModel>
    apiAddressesPost({ addressViewModel }: ApiAddressesPostRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AddressViewModel>>
    apiAddressesPost({ addressViewModel }: ApiAddressesPostRequest, opts?: OperationOpts): Observable<AddressViewModel | RawAjaxResponse<AddressViewModel>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<AddressViewModel>({
            url: '/api/Addresses',
            method: 'POST',
            headers,
            body: addressViewModel,
        }, opts?.responseOpts);
    };

}
