// tslint:disable
/**
 * Chabloom Payments
 * Chabloom Payments v1 API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    AccountViewModel,
    ProblemDetails,
} from '../models';

export interface ApiAccountsIdGetRequest {
    id: string;
}

export interface ApiAccountsIdPutRequest {
    id: string;
    accountViewModel?: AccountViewModel;
}

export interface ApiAccountsPostRequest {
    accountViewModel?: AccountViewModel;
}

/**
 * no description
 */
export class AccountsApi extends BaseAPI {

    /**
     */
    apiAccountsGet(): Observable<Array<AccountViewModel>>
    apiAccountsGet(opts?: OperationOpts): Observable<RawAjaxResponse<Array<AccountViewModel>>>
    apiAccountsGet(opts?: OperationOpts): Observable<Array<AccountViewModel> | RawAjaxResponse<Array<AccountViewModel>>> {
        return this.request<Array<AccountViewModel>>({
            url: '/api/Accounts',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiAccountsIdGet({ id }: ApiAccountsIdGetRequest): Observable<AccountViewModel>
    apiAccountsIdGet({ id }: ApiAccountsIdGetRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AccountViewModel>>
    apiAccountsIdGet({ id }: ApiAccountsIdGetRequest, opts?: OperationOpts): Observable<AccountViewModel | RawAjaxResponse<AccountViewModel>> {
        throwIfNullOrUndefined(id, 'id', 'apiAccountsIdGet');

        return this.request<AccountViewModel>({
            url: '/api/Accounts/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiAccountsIdPut({ id, accountViewModel }: ApiAccountsIdPutRequest): Observable<void>
    apiAccountsIdPut({ id, accountViewModel }: ApiAccountsIdPutRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    apiAccountsIdPut({ id, accountViewModel }: ApiAccountsIdPutRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'apiAccountsIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/api/Accounts/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: accountViewModel,
        }, opts?.responseOpts);
    };

    /**
     */
    apiAccountsPost({ accountViewModel }: ApiAccountsPostRequest): Observable<AccountViewModel>
    apiAccountsPost({ accountViewModel }: ApiAccountsPostRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AccountViewModel>>
    apiAccountsPost({ accountViewModel }: ApiAccountsPostRequest, opts?: OperationOpts): Observable<AccountViewModel | RawAjaxResponse<AccountViewModel>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<AccountViewModel>({
            url: '/api/Accounts',
            method: 'POST',
            headers,
            body: accountViewModel,
        }, opts?.responseOpts);
    };

}
