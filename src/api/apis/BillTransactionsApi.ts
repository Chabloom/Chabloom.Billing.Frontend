/* tslint:disable */
/* eslint-disable */
/**
 * Chabloom Payments
 * Chabloom Payments v1 API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BillTransactionViewModel,
    BillTransactionViewModelFromJSON,
    BillTransactionViewModelToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface ApiBillTransactionsIdGetRequest {
    id: string;
}

export interface ApiBillTransactionsPostRequest {
    billTransactionViewModel?: BillTransactionViewModel;
}

/**
 * BillTransactionsApi - interface
 * 
 * @export
 * @interface BillTransactionsApiInterface
 */
export interface BillTransactionsApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillTransactionsApiInterface
     */
    apiBillTransactionsGetRaw(): Promise<runtime.ApiResponse<Array<BillTransactionViewModel>>>;

    /**
     */
    apiBillTransactionsGet(): Promise<Array<BillTransactionViewModel>>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillTransactionsApiInterface
     */
    apiBillTransactionsIdGetRaw(requestParameters: ApiBillTransactionsIdGetRequest): Promise<runtime.ApiResponse<BillTransactionViewModel>>;

    /**
     */
    apiBillTransactionsIdGet(requestParameters: ApiBillTransactionsIdGetRequest): Promise<BillTransactionViewModel>;

    /**
     * 
     * @param {BillTransactionViewModel} [billTransactionViewModel] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BillTransactionsApiInterface
     */
    apiBillTransactionsPostRaw(requestParameters: ApiBillTransactionsPostRequest): Promise<runtime.ApiResponse<BillTransactionViewModel>>;

    /**
     */
    apiBillTransactionsPost(requestParameters: ApiBillTransactionsPostRequest): Promise<BillTransactionViewModel>;

}

/**
 * 
 */
export class BillTransactionsApi extends runtime.BaseAPI implements BillTransactionsApiInterface {

    /**
     */
    async apiBillTransactionsGetRaw(): Promise<runtime.ApiResponse<Array<BillTransactionViewModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BillTransactions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BillTransactionViewModelFromJSON));
    }

    /**
     */
    async apiBillTransactionsGet(): Promise<Array<BillTransactionViewModel>> {
        const response = await this.apiBillTransactionsGetRaw();
        return await response.value();
    }

    /**
     */
    async apiBillTransactionsIdGetRaw(requestParameters: ApiBillTransactionsIdGetRequest): Promise<runtime.ApiResponse<BillTransactionViewModel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiBillTransactionsIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BillTransactions/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BillTransactionViewModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBillTransactionsIdGet(requestParameters: ApiBillTransactionsIdGetRequest): Promise<BillTransactionViewModel> {
        const response = await this.apiBillTransactionsIdGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiBillTransactionsPostRaw(requestParameters: ApiBillTransactionsPostRequest): Promise<runtime.ApiResponse<BillTransactionViewModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/BillTransactions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BillTransactionViewModelToJSON(requestParameters.billTransactionViewModel),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BillTransactionViewModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBillTransactionsPost(requestParameters: ApiBillTransactionsPostRequest): Promise<BillTransactionViewModel> {
        const response = await this.apiBillTransactionsPostRaw(requestParameters);
        return await response.value();
    }

}
